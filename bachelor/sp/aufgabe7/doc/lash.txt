b)
Wenn Vordergrundprozess laeuft, wird dieser beendet und man kehrt in die lash zurueck. Diese gibt "Interrupt!" aus.
Wenn Hintergrundprozesse laufen, empfaengt jeder dieser Prozesse das Signal SIGINT. Das Programm sleep zum Beispiel wird dadurch beendet. Ausserdem wird "Interrupt!" ausgegeben (durch lash).

Nach Aenderung: SIGINT wird von den Hintergrundprozessen ignoriert, sleep zum Beispiel bricht nicht ab, sondern laeuft einfach weiter. Lediglich die lash gibt "Interrupt!" aus. Vordergrundprozesse empfangen weiterhin das Signal SIGINT, sleep wird also beendet. lash gibt trotzdem immer "Interrupt!" aus.

d)
Es kann passieren, dass ein Hintergrundprozess entfernt wird, waehrend wir die Elemente aus der plist ausgeben. Es wird also Speicher freigegeben, auf den noch zugegriffen werden sollte.
Die jobs-"Ausgabefunktion" laeuft ueber die Liste, steht zum Beispiel gerade auf Element 3 der Liste. Jetzt erhaelt der Prozess ein Signal (SIGCHLD zum Beispiel) und entfenrt Elemente 3 und 4 aus der Liste, gibt also auch den Speicher dieser Elemente frei. Das kann zum Abbruch des Programms fuehren, weil auf Speicher zugegriffen werden soll, der bereits gefreed wurde.
Um das zu verhindern, blockieren wir das Signal SIGCHLD (das dafuer sorgt, dass Elemente aus der Liste entfernt werden) fuer die Zeit, in der wir die Liste durchlaufen. Dadurch wird der Signalhandler in dieser Zeit nicht aufgerufen und somit werden auch keine Elemente aus der Liste entfernt.
