//=================================================================================================
/*
//  Advanced Programming Techniques (AdvPT)
//  Winter Term 2009/2010
//  Project phase - Black Jack
//
//  Copyright (C) 2010 Klaus Iglberger
*/
//=================================================================================================

#ifndef _BLACKJACK_CORE_CARDHAND_H_
#define _BLACKJACK_CORE_CARDHAND_H_


//*************************************************************************************************
// Includes
//*************************************************************************************************

#include <vector>
#include <blackjack/core/Types.h>
#include <blackjack/util/Types.h>


namespace blackjack {

//=================================================================================================
//
//  CLASS DEFINITION
//
//=================================================================================================

//*************************************************************************************************
/*!\brief Implementation of a hand of cards.
//
// This class represents a hand of cards, i.e., all cards a player currently has in his hands.
*/
class CardHand
{
 public:
   //**Constructor*********************************************************************************
   inline CardHand();
   //**********************************************************************************************

   //**Utility functions***************************************************************************
   inline size_t  size () const;
   inline void    add  ( CardID card );
          value_t count() const;
   inline void    reset();
   //**********************************************************************************************

 private:
   //**Member functions****************************************************************************
   std::vector<CardID> cards_;  // Container for all cards.
   //**********************************************************************************************
};
//*************************************************************************************************




//=================================================================================================
//
//  CONSTRUCTOR
//
//=================================================================================================

//*************************************************************************************************
/*!\brief Constructor of the CardHand class.
*/
inline CardHand::CardHand()
   : cards_()  // Container for all cards
{}
//*************************************************************************************************




//=================================================================================================
//
//  UTILITY FUNCTIONS
//
//=================================================================================================

//*************************************************************************************************
/*!\brief Returns the number of cards contained in the hand of cards.
//
// \return The current number of cards.
*/
inline size_t CardHand::size() const
{
   return cards_.size();
}
//*************************************************************************************************


//*************************************************************************************************
/*!\brief Adds a new card to the hand of cards.
//
// \return void
*/
inline void CardHand::add( CardID card )
{
   cards_.push_back( card );
}
//*************************************************************************************************


//*************************************************************************************************
/*!\brief Removing all cards from the hand of cards.
//
// \return void
*/
inline void CardHand::reset()
{
   cards_.clear();
}
//*************************************************************************************************

} // namespace blackjack

#endif
